<?xml version="1.0" encoding="UTF-8"?>
<document
	xmlns="http://maven.apache.org/xsd/xdoc-2.0.xsd"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/xsd/xdoc-2.0.xsd">
<properties>
	<author email="robin.bygrave@gmail.com">Rob Bygrave</author>
	<title>Install/Configure Ebean</title>
</properties>
<body>
	<script type="text/javascript" src="scripts/shCore.js"></script>
	<script type="text/javascript" src="scripts/shBrushBash.js"></script>
	<script type="text/javascript" src="scripts/shBrushJava.js"></script>
	<script type="text/javascript" src="scripts/shBrushPlain.js"></script>
	<link type="text/css" rel="stylesheet" href="styles/shCore.css"/>
	<link type="text/css" rel="stylesheet" href="styles/shThemeDefault.css"/>
	<script type="text/javascript">
		SyntaxHighlighter.config.clipboardSwf = 'scripts/clipboard.swf';
		SyntaxHighlighter.all();
	</script>
<section name="Install/Configure Ebean">
<macro name="toc">
</macro>
<subsection name="1. Classpath">
<p>

Put in your classpath
</p>
<pre class="brush: bash;">
avajeEbean.jar
avajeLib.jar
javax.persistence.jar 
</pre>

<p>
Also put in the classpath...
</p>
<pre class="brush: bash;">
jta.jar

# if you use jug for UUID Generation
jug-lgpl-2.0.0.jar			

# if you use Lucene Text Indexing
lucene-core-1.9.1.jar		
</pre>


<p>
If you are going to use the Entity Bean Code Generator to generate Annotated Entity Beans also put in the classpath...
</p>
<pre class="brush: bash;">
avajeCodeGen.jar
jxl.jar
velocity-1.4.jar
velocity-dep-1.4.jar
</pre>
</subsection>

<subsection name="3. EBean Properties">
<p>EBean makes strong use of Properties to determine how an EBean server should be configured.</p>
<subsection name="Determining Properties">
<p>Determine the appropriate <a href="configure_locateproperties.html">location</a> to put the avaje.properties file.
</p>
<p>EBean will search for properties in a wide variety of locations under an assortment names.
The precedence is as follows:</p>
<ol>
<li>Progrematic setting of properties.
<code>GlobalProperties.put("ebean.debug.lazyload", String.valueOf(true));</code>
</li>
<li>System properties that begin with the prefix ebean.  For example if you launch your application
with a command line argument such as <code>-Debean.debug.lazyload=true</code>, that would take precedence of any ebean.deubg.lazyload entry
in any property file that is read.</li>
<li>ServletContext parameters that begin with the prefix ebean.
This only applies if the web context launches with com.avaje.ebeaninternal.<br/>&#160;&#160;server.core.ServletContextListener.</li>
<li>Properties in properties file whose name is:
<ol>
<li>Contents of environemnt variable: <code>EBEAN_PROPS_FILE</code></li>
<li>Contents of system property: <code>ebean.props.file</code></li>
<li>"ebean.properties"</li>
</ol></li>
<li>The location of the file name determined above is:
<ol>
<li>found in the WEB-INF directory for a Servlet Container (Tomcat/Jetty etc)</li>
<li>found in the current working directory</li>
<li>found in the classpath</li>
</ol></li>
</ol>
</subsection>
<subsection name="Property Inventory">
<table>
<tr><th>Property</th><th>Description</th><th>Default</th></tr>
<tr><td>ebean.default.datasource</td><td>null</td></tr>
<tr><td>datasource.default</td><td>null</td></tr>
<tr><td>ebean.serverfactory</td>
<td>Creates EBean server based on datasource, and DatabasePlatform</td><td>com.avaje.ebeaninternal.<br/>&#160;&#160;server.core.DefaultServerFactory</td></tr>
<tr><td>datasource.${ServerName}.username</td><td>Desc</td><td>null</td></tr>
<tr><td>datasource.${ServerName}.password</td><td>Desc</td><td>null</td></tr>
<tr><td>datasource.${ServerName}.databaseDriver</td><td>Desc</td><td>null</td></tr>
<tr><td>datasource.${ServerName}.driver</td><td>Desc</td><td>v</td></tr>
<tr><td>datasource.${ServerName}.databaseUrl</td><td>Desc</td><td>null</td></tr>
<tr><td>datasource.${ServerName}.url</td><td>Desc</td><td>v</td></tr>
<tr><td>datasource.${ServerName}.captureStackTrace</td><td>Desc</td><td>false</td></tr>
<tr><td>datasource.${ServerName}.maxStackTraceSize</td><td>Desc</td><td>5</td></tr>
<tr><td>datasource.${ServerName}.leakTimeMinutes</td><td>Desc</td><td>30</td></tr>
<tr><td>datasource.${ServerName}.maxInactiveTimeSecs</td><td>Desc</td><td>900</td></tr>
<tr><td>datasource.${ServerName}.minConnections</td><td>Desc</td><td>0</td></tr>
<tr><td>datasource.${ServerName}.maxConnections</td><td>Desc</td><td>20</td></tr>
<tr><td>datasource.${ServerName}.pstmtCacheSize</td><td>Desc</td><td>20</td></tr>
<tr><td>datasource.${ServerName}.cstmtCacheSize</td><td>Desc</td><td>20</td></tr>
<tr><td>datasource.${ServerName}.waitTimeout</td><td>Desc</td><td>1</td></tr>
<tr><td>datasource.${ServerName}.heartbeatSql</td><td>Desc</td><td>null</td></tr>
<tr><td>datasource.${ServerName}.poolListener</td><td>Desc</td><td>null</td></tr>
<tr><td>datasource.${ServerName}.offline</td><td>Desc</td><td>false</td></tr>
<tr><td>ebean.dbplatform.registry</td>
<td>Source of xml specification(s) for database platforms</td>
<td>com/avaje/ebean/config/dbplatform/DatabasePlatform</td></tr>
<tr><td>debug.lazyload.ignore</td><td></td><td>false</td></tr>
<tr><td>ebean.search.packages</td><td></td><td>null</td></tr>
<tr><td>ebean.search.jars</td><td></td><td>false</td></tr>
<tr><td>system.shutdown.runnable</td><td></td><td>null</td></tr>
<tr><td>cluster.local</td><td></td><td>null</td></tr>
<tr><td>cluster.broadcast</td><td></td><td>null</td></tr>
<tr><td>cluster.members</td><td></td><td>null</td></tr>
</table>
</subsection>
</subsection>
<subsection name="5. Create a Class with a main method that contains Ebean.getServer(null);">
<p>
You can use code below. Run the Class.
</p>
<pre class="brush: java">
package test;

import com.avaje.ebean.Ebean;

public class Test {

	public static void main(String[] args) {
		
		Ebean.getServer(null);
		System.out.println("DONE");
	}
}
</pre>
</subsection>

<subsection name="6. Running the class you should see something along the lines of...">
<pre class="brush: plain">

INFO: Ebean Version[2.6.0-SNAPSHOT] Java Version[1.5.0_15]
INFO: Classpath search hits in jars[] pkgs[com.avaje.tests.noid, com.avaje.tests.idkeys.db, com.avaje.tests.model.ivo.converter, com.avaje.tests.model.basic.event, com.avaje.tests.compositekeys.db, com.avaje.tests.report, com.avaje.tests.xml, com.avaje.tests.model.basic, com.avaje.tests.model.basic.xtra, com.avaje.tests.model.ddd, com.avaje.ebean.meta, com.avaje.ebeaninternal.server.bean, com.avaje.tests.model.ldap, com.avaje.tests.singleTableInheritance.model]  searchTime[406]
INFO: DataSourcePool [h2] autoCommit[false] transIsolation[READ_COMMITTED] min[1] max[25]
INFO: DataSourcePool [h2] grow pool;  busy[0] size[0] max[25]
INFO: Loaded 6 platforms from classpath:com/avaje/ebean/config/dbplatform/dbms.xml
INFO: DatabasePlatform name:h2 platform:h2
INFO: Registering Joda data types
INFO: Register ScalarTypeWrapper from class com.avaje.tests.model.ivo.SysTime -> class java.sql.Timestamp using:class com.avaje.tests.model.ivo.converter.SysTimeConverter
INFO: Registering ScalarType for class com.avaje.tests.model.ivo.Rate implemented using reflection
INFO: Registering ScalarType for class com.avaje.tests.model.ivo.Money implemented using reflection
INFO: Registering CompoundType class com.avaje.tests.model.ivo.CMoney  using reflection
INFO: Registering CompoundType class com.avaje.tests.model.ivo.ExhangeCMoneyRate 
INFO: Registering CompoundType class org.joda.time.Interval 
INFO: Deployment xml [orm.xml]  loaded.
INFO: Registering ScalarType for class com.avaje.tests.model.ivo.Oid implemented using reflection
INFO: Entities enhanced[84] subclassed[4]
WARNING: Mixing enhanced and subclassed entities. Subclassed classes:[MetaQueryStatistic, MetaAutoFetchStatistic, MetaAutoFetchTunedQueryInfo]
INFO: Transaction logs in: logs
INFO: AutoFetch deserialized from file [E:\workspace\ebean-svn\.\.ebean.h2.autofetch]
INFO: AutoFetch queryTuning[true] profiling[true] mode[DEFAULT_OFF]  profiling rate[0.05] min[1] base[10]
WARNING: Column name [data] is a suspected SQL reserved word for property com.avaje.tests.model.basic.EBasicEncryptBinary.data
WARNING: Table name [section] is a suspected SQL reserved word for bean com.avaje.tests.model.basic.Section
runScript
executing 1 of 137 SET REFERENTIAL_INTEGRITY FALSE
executing 2 of 137 drop table if exists o_address
executing 3 of 137 drop table if exists article
...
executing 72 of 137 SET REFERENTIAL_INTEGRITY TRUE
executing 73 of 137 drop sequence if exists o_address_seq
executing 74 of 137 drop sequence if exists article_seq
executing 75 of 137 drop sequence if exists audit_log_seq
...
... end of script
runScript
executing 1 of 203 create table o_address (id                        smallint not null,line_1...
executing 2 of 203 create table article (id                        integer not null,name...
executing 3 of 203 create table audit_log (id                        bigint not null,description...
...
executing 71 of 203 create sequence o_address_seq
executing 72 of 203 create sequence article_seq
executing 73 of 203 create sequence audit_log_seq
...
executing 136 of 203 alter table o_address add constraint fk_o_address_country_1 foreign key (country...
executing 137 of 203 create index ix_o_address_country_1 on o_address (country_code)
executing 138 of 203 alter table ckey_detail add constraint fk_ckey_detail_parent_2 foreign key (one_...
executing 139 of 203 create index ix_ckey_detail_parent_2 on ckey_detail (one_key,two_key)
executing 140 of 203 alter table ckey_parent add constraint fk_ckey_parent_assoc_3 foreign key (assoc...
...
executing 203 of 203 alter table mnoc_user_mnoc_role add constraint fk_mnoc_user_mnoc_role_mnoc_r_02...
... end of script
DONE
</pre>
</subsection>

<subsection name="7. Take special note of the Plugin being used / searched for.">
<p>
For databases not yet tested against
the Plugin you will see a log message as follows:
</p>
<pre class="brush: plain">
WARNING: database platform DERBY is not known
</pre>
<p>
<a href="plugin.html">Refer to plugin.html</a> for information on how to create and register a plugin
for your dbms.
</p>
</subsection>
</section>

<section name="TROUBLESHOOTING">

<subsection name="Nothing in Console">
<p>
If you only get DONE appearing in the Console (System.out) then check the
system.properties file to make sure "log.toconsole=true"
</p>
</subsection>
<subsection name="If Ebean can not find the system.properties file you will get something like">
<pre class="brush: plain;">
Exception in thread "main" java.lang.ExceptionInInitializerError
	at com.avaje.ebean.Ebean.&lt;clinit&gt;(Ebean.java:114)
	at unitext.ex.Test.main(Test.java:9)
Caused by: java.lang.RuntimeException: Can not find file 
-[C:\devjava\project\appZsite\system.properties] to load properties
	at com.avaje.lib.SystemProperties.loadProperties(SystemProperties.java:134)
	at com.avaje.lib.SystemProperties.defaultInit(SystemProperties.java:239)
	at com.avaje.lib.SystemProperties.getProperty(SystemProperties.java:230)
	at com.avaje.lib.SystemProperties.getProperty(SystemProperties.java:195)
	at com.avaje.lib.Log.create(Log.java:66)
	at com.avaje.lib.Log.&lt;clinit&gt;(Log.java:47)
	... 2 more
</pre>
</subsection>
<subsection name="If Ebean can not find the 'logs' directory">
<pre class="brush: plain;">
FATAL ERROR: init of FileLogger: 
Can't get log directory [logs] from [C:\devjava\project\appZsite]
FATAL ERROR: init of FileLogger: 
Can't get log directory [logs] from [C:\devjava\project\appZsite]
java.lang.RuntimeException: 
Can't get log directory [logs] from [C:\devjava\project\appZsite]
	at com.avaje.lib.SimpleLogger.getFilePath(SimpleLogger.java:322)
	at com.avaje.lib.SimpleLogger.init(SimpleLogger.java:336)
	...
</pre>
</subsection></section></body>
</document>

