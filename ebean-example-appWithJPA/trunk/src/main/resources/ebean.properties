
## -------------------------------------------------------------
## Reload java.util.logging properties file
## -------------------------------------------------------------
x-logging.properties.file=logging.properties


## -------------------------------------------------------------
## Load (Dev/Test/Prod) server specific properties
## -------------------------------------------------------------
## This is a possible alternative to using JNDI to set environment
## properties externally (to the WAR file).  This is another way 
## your Dev, Test and Prod servers can have different properties.

#load.properties.override=${CATALINA_HOME}/conf/myapp.ebean.properties


ebean.autofetch.querytuning=true
ebean.autofetch.profiling=true
ebean.autofetch.implicitmode=default_on
ebean.autofetch.profiling.min=1
ebean.autofetch.profiling.base=10
#ebean.autofetch.profiling.rate=0.05


## -------------------------------------------------------------
## Transaction Logging
## -------------------------------------------------------------
ebean.debug.sql=true
ebean.debug.lazyload=true

## Log transaction begins and ends etc
## (0=NoLogging 1=minimal ... 9=logAll)
ebean.debug.transaction=3


## location of transaction logs
ebean.log.directory=logs
#ebean.log.directory=${catalina.base}/logs/trans

## General logging level: (0=None, 1=Explicit, 2=All)
ebean.log.level=2

## Sharing log files: (0=None Share, 1=Implicit Share, 2=All Share)
ebean.log.share=1

## Specific Log levels
## 0=none  1=summary  2=bindings  3=sql
ebean.log.iud=3
ebean.log.findid=3
ebean.log.findmany=3

##ebean.transaction.rollbackOnChecked=false

## -------------------------------------------------------------
## Data Types
## -------------------------------------------------------------

ebean.type.boolean.false=F
ebean.type.boolean.true=T
## use varchar or integer (defaults to varchar)
#ebean.type.boolean.dbtype=varchar


## -------------------------------------------------------------
## Batch Mode 
## -------------------------------------------------------------

#ebean.batch.mode=false
#ebean.batch.getgeneratedkeys=true
#ebean.batch.size=20


## -------------------------------------------------------------
## DataSource Factory (JNDI, Default or custom)
## ------------------------------------------------------------- 

## Default (Ebean DataSourceFactory)
ebean.datasource.factory=default

## JNDI
#ebean.datasource.factory=jndi

## Custom DataSourceFactory
#ebean.datasource.factory=yourpackage.YourDataSourceFactory


## -------------------------------------------------------------
## DataSources (If using default Ebean DataSourceFactory)
## ------------------------------------------------------------- 

#datasource.default=null

datasource.jpa1.username=sa
datasource.jpa1.password=
datasource.jpa1.databaseUrl=jdbc:h2:database/test;SCHEMA=TEST;FILE_LOCK=SOCKET;LOCK_MODE=3
datasource.jpa1.databaseDriver=org.h2.Driver
datasource.jpa1.minConnections=1
datasource.jpa1.maxConnections=25
#datasource.mysql.heartbeatsql=select count(*) from dual
datasource.jpa1.isolationlevel=read_committed


datasource.mysql.username=test
datasource.mysql.password=test
datasource.mysql.databaseUrl=jdbc:mysql://127.0.0.1:3306/zsite
datasource.mysql.databaseDriver=com.mysql.jdbc.Driver
datasource.mysql.minConnections=1
datasource.mysql.maxConnections=25
#datasource.mysql.heartbeatsql=select count(*) from dual
datasource.mysql.isolationlevel=read_committed


datasource.ora10.username=junk
datasource.ora10.password=junk
datasource.ora10.databaseUrl=jdbc:oracle:thin:@127.0.0.1:1521:XE
datasource.ora10.databaseDriver=oracle.jdbc.driver.OracleDriver
datasource.ora10.minConnections=1
datasource.ora10.maxConnections=25
datasource.ora10.heartbeatsql=select count(*) from dual
datasource.ora10.isolationlevel=read_committed

datasource.ms05.username=junk
datasource.ms05.password=junk
datasource.ms05.databaseUrl=jdbc:sqlserver://127.0.0.1;
datasource.ms05.databaseDriver=com.microsoft.sqlserver.jdbc.SQLServerDriver
datasource.ms05.minConnections=1
datasource.ms05.maxConnections=25
datasource.ms05.heartbeatsql=select count(*) from j_test
datasource.ms05.isolationlevel=read_committed


## -------------------------------------------------------------
## Naming Conventions
## -------------------------------------------------------------


ebean.updatetimestamp.property=updtime
ebean.updatetimestamp.dbcolumn=updtime

ebean.inserttimestamp.property=cretime
ebean.inserttimestamp.dbcolumn=cretime
    
ebean.counter.property=vercount
ebean.counter.dbcolumn=vercount



## -------------------------------------------------------------
## How property Expressions are evaluated (com.avaje.lib.PropertyEvaluator)
## -------------------------------------------------------------
## avaje.properties can contain 'expressions'.  
## For example...
##
## log.directory=${catalina.base}/logs
##
##
## Expressions start with "${" and end with "}"
## JNDI Expressions start with "${jndi:" and end with "}"
##
##
## Examples:
## ${jndi:MyJndiProperty}
## ${CATALINA_HOME}
## ${catalina.base}
## ${any.property.in.avaje.properties}
##
##
## 
## If its a JNDI Expression
##    ... return the JNDI lookup value
##
## Otherwise get the first non-null value from
##    Environment variable - java.lang.System.getenv()
##    Java System property - java.lang.System.getProperty()
##    Other Avaje property - com.avaje.lib.SystemProperties.getProperty()
##
## If all these returned null
##    return the expression itself as the value
##
